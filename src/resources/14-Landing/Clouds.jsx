/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Sources: https://sketchfab.com/curiositysphere
*/

import React from "react";
import { Vector3, Euler } from 'three';
import { useGLTF } from "@react-three/drei";

const modelProps = {
    position: new Vector3(0, 0, 0),
    rotation: new Euler(-Math.PI / 2, 0, 0),
    dispose: null,
}

export function Cloud01(props) {
    const { nodes } = useGLTF("./models/cloud_01.glb");

    return (
        <group scale={100} {...modelProps} {...props}>
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Cloud__0.geometry}
            >
                <meshStandardMaterial
                    transparent
                    color={'ivory'}
                    envMapIntensity={0.5}
                    onBeforeCompile={(shader) => {
                        shader.fragmentShader = shader.fragmentShader.replace(
                            `vec4 diffuseColor = vec4( diffuse, opacity );`,
                            `
                            float fadeDist = 250.0;
                            float dist = length(vViewPosition);
                            float fadeOpacity = smoothstep(fadeDist, 0.0, dist);

                            vec4 diffuseColor = vec4( diffuse, opacity * fadeOpacity );`
                        )
                    }}
                />
            </mesh>
        </group>
    );
}
useGLTF.preload("./models/cloud_01.glb");

export function Cloud02(props) {
    const { nodes } = useGLTF("./models/cloud_02.glb");
    return (
        <group scale={1} {...modelProps} {...props}>
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Cloud02.geometry}
            >
                <meshStandardMaterial color={'ivory'} envMapIntensity={0.5} transparent />
            </mesh>
        </group>
    );
}
useGLTF.preload("./models/cloud_02.glb");
